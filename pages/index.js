import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import Clothing from '../components/Clothing'
import Container from '../layouts/Container'
import Navbar from '../components/Navbar'
import { useState } from 'react'

import { mockData } from '../mock/mock'


function Home() {
  const [topIndex, setTopIndex] = useState(0);
  const [bottomIndex, setBottomIndex] = useState(0);
  const [shoesIndex, setShoesIndex] = useState(0);

  const { data: { things: { edges } } } = mockData;

  const tops = edges.filter((it) => it.node.characteristics.edges.find((it) => it.node.option.value === "top"))
  const bottoms = edges.filter((it) => it.node.characteristics.edges.find((it) => it.node.option.value === "bottom"))
  const shoes = edges.filter((it) => it.node.characteristics.edges.find((it) => it.node.option.value === "shoes"))


  // helper function to get random number
  function getRandomInt(max) {
    return Math.floor(Math.random() * max);
  }

  // onclick handler for generate button
  const generate = () => {
    setTopIndex(getRandomInt(tops.length - 1));
    setBottomIndex(getRandomInt(bottoms.length - 1));
    setShoesIndex(getRandomInt(shoes.length - 1));
  }

  return (
    <div class="bg-black h-screen">
      <Head>
        <title>Generate</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar generate={generate} />


      <section id="clothing">
        <div class="flex flex-col w-96 p-6 mx-auto justify-center">
          <Clothing imageSource={tops[topIndex].node.medias.edges[0].node.mediaUrl} imageAlt={"shirt"} />
          <Clothing imageSource={bottoms[bottomIndex].node.medias.edges[0].node.mediaUrl} imageAlt={"bottom"} />
          <Clothing imageSource={shoes[shoesIndex].node.medias.edges[0].node.mediaUrl} imageAlt={"shoes"} />
        </div>
      </section>


    </div>
  )
}

export default Home;

Home.getLayout = function getLayout(page) {
  return <Container>{page}</Container>
}

